{"version":3,"file":"main.js","mappings":"mBAAe,MAAMA,EACnB,WAAAC,GACEC,KAAKC,UAAYC,SAASC,cAAc,eACxCH,KAAKI,YAAcF,SAASC,cAAc,iBAC1CH,KAAKK,MAAQC,MAAMC,KAAKL,SAASM,iBAAiB,WAClDR,KAAKS,SAAWP,SAASC,cAAc,cACvCH,KAAKU,MAAQ,CACf,CAEA,QAAAC,GACEX,KAAKY,IAAM,EAEXZ,KAAKS,SAASI,iBAAiB,SAASC,IACzBA,EAAMC,OAAOC,QAAQ,aAEhChB,KAAKY,MACLE,EAAMC,OAAOE,UAAY,QACzBjB,KAAKC,UAAUiB,YAAclB,KAAKY,IACpC,GAGJ,CAEA,UAAAO,GACEnB,KAAKU,QACLV,KAAKI,YAAYc,YAAclB,KAAKU,KACtC,CAEA,UAAAU,CAAWC,GACTC,MAAM,GAAGD,KACTE,SAASC,QACX,EC9BF,MAAMC,EAAW,IAAI3B,GCCF,IDCJ,MACb,WAAAC,GACEC,KAAK0B,YAAc,GACnB1B,KAAKC,UAAYC,SAASC,cAAc,eACxCH,KAAKI,YAAcF,SAASC,cAAc,iBAC1CH,KAAKK,MAAQC,MAAMC,KAAKL,SAASM,iBAAiB,WAClDR,KAAKS,SAAWP,SAASC,cAAc,eACvCH,KAAKyB,SAAW,IAAI3B,CACtB,CAEA,IAAA6B,GACE3B,KAAK4B,SACLH,EAASd,UACX,CAEA,MAAAiB,GACE,IAAIC,EAAWC,aAAY,KACS,MAA/B9B,KAAKC,UAAUiB,cAChBO,EAASL,WAAW,WACpBW,cAAcF,IAGZ7B,KAAKS,SAASN,cAAc,aAC9BH,KAAKyB,SAASN,aAEsB,MAAjCnB,KAAKI,YAAYc,cAClBO,EAASL,WAAW,cACpBW,cAAcF,KAIlB7B,KAAKK,MAAM2B,SAAQC,IACbA,EAAKhB,UAAUiB,SAAS,UAG1BD,EAAKE,UAAUC,OAAO,UAFtBpC,KAAK0B,YAAYW,KAAKJ,EAGxB,IAEajC,KAAK0B,YAAYY,KAAKC,MAAMD,KAAKV,SAAW5B,KAAK0B,YAAYc,SACrEL,UAAUM,IAAI,SAAS,GAC9B,IACJ,ICxCSd,M","sources":["webpack://Events/./src/js/GamePlay.js","webpack://Events/./src/js/RandomExit.js","webpack://Events/./src/js/app.js"],"sourcesContent":["export default class GamePlay {\r\n  constructor() {\r\n    this.winResult = document.querySelector('.win-result');\r\n    this.looseResult = document.querySelector('.loose-result');\r\n    this.cells = Array.from(document.querySelectorAll('.cells'))\r\n    this.allCells = document.querySelector('.all-cells');\r\n    this.loose = 0;\r\n  }\r\n\r\n  listener() {\r\n    this.win = 0;\r\n\r\n    this.allCells.addEventListener('click',(event) => {\r\n      const cell = event.target.closest(\".active\");\r\n      if (cell) {\r\n        this.win++;\r\n        event.target.className = 'cells'\r\n        this.winResult.textContent = this.win;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  withoutHit() {\r\n    this.loose++\r\n    this.looseResult.textContent = this.loose;\r\n  }\r\n\r\n  showResult(message) {\r\n    alert(`${message}`)\r\n    location.reload()\r\n  }\r\n}\r\n","import GamePlay from './GamePlay';\r\nconst gamePlay = new GamePlay();\r\n\r\nexport default class RandomExit{\r\n  constructor() {\r\n    this.randomCells = []\r\n    this.winResult = document.querySelector('.win-result');\r\n    this.looseResult = document.querySelector('.loose-result');\r\n    this.cells = Array.from(document.querySelectorAll('.cells'))\r\n    this.allCells = document.querySelector('.all-cells ');\r\n    this.gamePlay = new GamePlay();\r\n  }\r\n\r\n  init() {\r\n    this.random();\r\n    gamePlay.listener()\r\n  }\r\n\r\n  random() {\r\n    let interval = setInterval(() => {\r\n      if(this.winResult.textContent === '5') {\r\n        gamePlay.showResult('Победа!')\r\n        clearInterval(interval);\r\n      }\r\n\r\n      if (this.allCells.querySelector(\".active\")) {\r\n        this.gamePlay.withoutHit();\r\n\r\n        if(this.looseResult.textContent === '6') {\r\n          gamePlay.showResult('Поражение!')\r\n          clearInterval(interval);\r\n        }\r\n      }\r\n\r\n      this.cells.forEach(item => {\r\n        if(!item.className.includes('active')) {\r\n          this.randomCells.push(item)\r\n        } else {\r\n          item.classList.remove('active');\r\n        }\r\n      })\r\n      const random = this.randomCells[Math.floor(Math.random() * this.randomCells.length)]\r\n      random.classList.add('active');\r\n    },1000)\r\n  }\r\n}\r\n","import RandomExit from './RandomExit';\r\n\r\nconst randomExit = new RandomExit()\r\n\r\nrandomExit.init()"],"names":["GamePlay","constructor","this","winResult","document","querySelector","looseResult","cells","Array","from","querySelectorAll","allCells","loose","listener","win","addEventListener","event","target","closest","className","textContent","withoutHit","showResult","message","alert","location","reload","gamePlay","randomCells","init","random","interval","setInterval","clearInterval","forEach","item","includes","classList","remove","push","Math","floor","length","add"],"sourceRoot":""}